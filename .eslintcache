[{"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\index.js":"1","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\App\\App.js":"2","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Header.js":"3","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\services\\token-service.js":"4","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\config.js":"5","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Nav\\Nav.js":"6","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\ControlPanel.js":"7","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Workspace.js":"8","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Landing\\Landing.js":"9","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Table\\Table.js":"10","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SearchSort.js":"11","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SearchBar\\SearchBar.js":"12","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SortDropdown\\SortDropdown.js":"13","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\Transport\\Transport.js":"14","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\TempoVolume\\TempoVolume.js":"15","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Title\\Title.js":"16","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\ClickOutsideWrapper\\ClickOutsideWrapper.js":"17","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\utils\\audio.js":"18","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\Pattern.js":"19","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\Sequencer\\Sequencer.js":"20","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\utils\\patternMethods.js":"21","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\PatternNew.js":"22"},{"size":920,"mtime":1611331570293,"results":"23","hashOfConfig":"24"},{"size":1090,"mtime":1611182362303,"results":"25","hashOfConfig":"24"},{"size":1567,"mtime":1611176531293,"results":"26","hashOfConfig":"24"},{"size":556,"mtime":1610762991227,"results":"27","hashOfConfig":"24"},{"size":110,"mtime":1610763600947,"results":"28","hashOfConfig":"24"},{"size":1414,"mtime":1610908610294,"results":"29","hashOfConfig":"24"},{"size":413,"mtime":1611088932829,"results":"30","hashOfConfig":"24"},{"size":377,"mtime":1611346139687,"results":"31","hashOfConfig":"24"},{"size":422,"mtime":1611005854010,"results":"32","hashOfConfig":"24"},{"size":204,"mtime":1610995771330,"results":"33","hashOfConfig":"24"},{"size":349,"mtime":1610917493726,"results":"34","hashOfConfig":"24"},{"size":882,"mtime":1611073374236,"results":"35","hashOfConfig":"24"},{"size":1435,"mtime":1611009228608,"results":"36","hashOfConfig":"24"},{"size":1343,"mtime":1611199953683,"results":"37","hashOfConfig":"24"},{"size":2608,"mtime":1611272998893,"results":"38","hashOfConfig":"24"},{"size":1316,"mtime":1611176849268,"results":"39","hashOfConfig":"24"},{"size":1071,"mtime":1611173522773,"results":"40","hashOfConfig":"24"},{"size":521,"mtime":1611273721864,"results":"41","hashOfConfig":"24"},{"size":8908,"mtime":1611340525708,"results":"42","hashOfConfig":"24"},{"size":833,"mtime":1611333767733,"results":"43","hashOfConfig":"24"},{"size":7344,"mtime":1611334824612,"results":"44","hashOfConfig":"24"},{"size":6576,"mtime":1611346074987,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fnd8qv",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\index.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\App\\App.js",[],["93","94"],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Header.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\services\\token-service.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\config.js",["95"],"export default {\r\n  API_ENDPOINT: 'http://localhost:8000/api',\r\n  TOKEN_KEY: 'blogful-client-auth-token',\r\n}\r\n","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Nav\\Nav.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\ControlPanel.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Workspace.js",["96"],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Landing\\Landing.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Table\\Table.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SearchSort.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SearchBar\\SearchBar.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\SearchSort\\SortDropdown\\SortDropdown.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\Transport\\Transport.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\ControlPanel\\TempoVolume\\TempoVolume.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Header\\Title\\Title.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\ClickOutsideWrapper\\ClickOutsideWrapper.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\utils\\audio.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\Pattern.js",["97","98"],"import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport * as Tone from 'tone'\r\nimport './Pattern.css'\r\nimport { masterVolume, samples } from '../../../utils/audio'\r\nimport { patternMethods } from '../../../utils/patternMethods'\r\nimport Sequencer from './Sequencer/Sequencer'\r\n\r\nexport default class Pattern extends Component {\r\n    state={\r\n        isLoaded: false,\r\n        isExpanded: false,\r\n        isSoloed: false,\r\n        isMuted: false,\r\n        isPlaying: true,\r\n        volume: -20,\r\n        pattern_length: 5,\r\n        patternArr: [1,0,1,1,1],\r\n    }\r\n    //get the pattern object via id from the server\r\n    //set the pattern on state change\r\n    //initialize a sampler\r\n    vol = new Tone.Volume(this.state.volume)\r\n    solo = new Tone.Solo()\r\n    sampler = new Tone.Sampler(\r\n        { \r\n        \"C-1\": samples.kick,\r\n        \"C#-1\": samples.snare,\r\n        \"D-1\": samples.hihatC,\r\n        \"Eb-1\": samples.hihatO,\r\n        \"E-1\": samples.shaker,\r\n        \"F-1\": samples.clap,\r\n        \"Gb-1\": samples.crash,\r\n        \"G-1\": samples.ride,    \r\n        },\r\n        {onLoad: ()=>{\r\n            this.setState({isLoaded: true})\r\n        }}\r\n    ).chain(this.vol, this.solo, masterVolume)\r\n    \r\n    //this callback reads and performs the pattern array \r\n    index = 0\r\n    inst=\"C-1\"\r\n    playhead=(time)=> {\r\n        let step = this.index % this.state.patternArr.length;\r\n        for (let i = 0; i < this.state.patternArr.length; i++) {          \r\n          if (this.state.patternArr[step]) this.sampler.triggerAttackRelease(this.inst, 0.2, time);\r\n        }\r\n        this.index++;\r\n    }\r\n    \r\n    //Listens to transport/context time and triggers callback at interval\r\n    loop = new Tone.Loop((time) => {\r\n        this.playhead(time)\r\n    }, `${this.state.patternArr.length}n`)\r\n    \r\n    //event handlers\r\n    handleToggleStart=()=>{\r\n        this.setState({isPlaying: !this.state.isPlaying})\r\n    }\r\n    handleToggleMute=()=>{\r\n        this.setState({isMuted: !this.state.isMuted})\r\n        this.loop.mute = !this.loop.mute\r\n    }\r\n    handleToggleSolo=()=>{\r\n        this.setState({isSoloed: !this.state.isSoloed})\r\n        console.log(this.solo)\r\n        this.solo.solo = !this.solo.solo\r\n    }\r\n    handleVolumeChange=(e)=>{\r\n        this.setState({volume: e.target.value})\r\n        this.vol.volume.value = e.target.value\r\n    }\r\n    handleSoundChange=(e)=>{\r\n        let idxAsNote = Tone.Frequency(e.target.selectedIndex, \"midi\").toNote()\r\n        this.inst = idxAsNote\r\n    }\r\n    handleEditPattern=(e)=>{\r\n        console.log(e.target.name)\r\n        const newArr = this.state.patternArr.map((beat,idx)=>{\r\n            console.log(idx)\r\n            return (idx===Number(e.target.name)) ? Number(!beat) : beat\r\n        })\r\n        console.log(newArr)\r\n        this.setState({patternArr: newArr})\r\n        //TODO: trigger an API update.. use put to update who pattern entry? or patch just the array?\r\n    }\r\n\r\n    render() {\r\n        this.state.isPlaying ? this.loop.start() : this.loop.stop()\r\n        \r\n        return (\r\n            <div className=\"pattern\">\r\n                <div className=\"condensed\">\r\n                    <div className=\"pattern-main\">\r\n                        <button className=\"delete-btn\" title=\"delete this pattern from the workspace\"><FontAwesomeIcon icon={\"times\"}/></button>\r\n                        {/* <button className=\"copy-btn\" title=\"to copy click this, then the add new (+) button. to clone click this and then the fields you'd like to clone. then click the pattern that will inherit them\"><FontAwesomeIcon icon={\"copy\"}/></button> */}\r\n                        <input placeholder=\"pattern name\" title=\"input a name for this pattern\" className=\"name-input\"></input>\r\n                        <button onClick={this.handleToggleSolo} className=\"solo-btn\" className={this.state.isSoloed ? \"solo-active\" : \"\"} title=\"solo this pattern (mutes all other patterns)\">S</button>\r\n                        <button onClick={this.handleToggleMute} className=\"volume-btn\" title=\"mute/unmute pattern\"><FontAwesomeIcon icon={this.state.isMuted ? \"volume-mute\" : \"volume-up\"} /></button>\r\n                    </div>\r\n                    <div className=\"pattern-editor\">\r\n                        <button className=\"expand-btn\"><FontAwesomeIcon icon={\"ellipsis-v\"}/></button>\r\n                        <Sequencer patternArr={this.state.patternArr} updateIdx={this.handleEditPattern}/>\r\n                        <button onClick={this.handleToggleStart}><FontAwesomeIcon icon={this.state.isPlaying ? \"pause\" : \"play\"}/></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"expanded\">\r\n                    <div>\r\n                        {/* TODO: Create a styled dropdown from the patternMethods module with tooltip for descriptions */}\r\n                        <select \r\n                        className=\"method-dropdown\"\r\n                        title=\"the method used to generate a pattern\"\r\n                        >\r\n                            <option>pulse</option>\r\n                            <option>beat</option>\r\n                            <option>random</option>\r\n                            <option>even</option>\r\n                            <option>periodic</option>\r\n                            <option>cyclic</option>\r\n                            <option>subdivision</option>\r\n                            <option>first</option>\r\n                            <option>last</option>\r\n                            <option disabled=\"\">grab</option>\r\n                        </select>\r\n                        <select \r\n                        className=\"sound-dropdown\"\r\n                        onChange={this.handleSoundChange}\r\n                        >\r\n                            <option>kick</option>\r\n                            <option>snare</option>\r\n                            <option>hihat-closed</option>\r\n                            <option>hihat-open</option>\r\n                            <option>shaker</option>\r\n                            <option>clap</option>\r\n                            <option>crash</option>\r\n                            <option>ride</option>\r\n                        </select>\r\n                        <label htmlFor=\"reverse\"> \r\n                            reverse\r\n                            <input id=\"reverse\" type=\"checkbox\" className=\"check\"/>\r\n                        </label>\r\n                        <label htmlFor=\"opposite\">\r\n                            opposite\r\n                            <input id=\"opposite\" type=\"checkbox\" className=\"check\"/>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <button className=\"decrement-bar-length-btn\">-</button>\r\n                            <input placeholder=\"bar length\" size=\"9\" className=\"bar-length-input\"/>\r\n                            <button className=\"increment-bar-length-btn\">+</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"decrement-onset-btn\">-</button>\r\n                            <input placeholder=\"onset(s)\" size=\"6\" className=\"onsets-input\"/>\r\n                            <button className=\"increment-onsets-btn\">+</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"decrement-rotation-btn\">-</button>\r\n                            <input placeholder=\"rotation\" size=\"7\" className=\"rotation-input\"/>\r\n                            <button className=\"increment-rotation-btn\">+</button>\r\n                        </div>\r\n                        {/* TODO: create tempo / ratio / source controls using loop.playbackRate \r\n                        and loop.inverval or individual synced tranports for each pattern. */}\r\n                        <div>\r\n                            <button className=\"decrement-tempo-btn\">-</button>\r\n                            <input className=\"tempo-btn\" size=\"7\" placeholder=\"120 bpm\"/>\r\n                            <button className=\"increment-tempo-btn\">+</button>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                volume\r\n                                <input \r\n                                type={\"range\"}\r\n                                max={1}\r\n                                min={-70}\r\n                                defaultValue={this.state.volume}\r\n                                onChange={this.handleVolumeChange}\r\n                            ></input>\r\n \r\n                            </label>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.loop.dispose()\r\n    }\r\n}\r\n","E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\Sequencer\\Sequencer.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\utils\\patternMethods.js",[],"E:\\Desktop\\Thinkful-Projects\\polyperc\\polyperc-app\\src\\components\\Workspace\\Pattern\\PatternNew.js",["99","100","101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":1,"nodeType":"110","endLine":4,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":99,"column":86,"nodeType":"118","endLine":99,"endColumn":138},{"ruleId":"111","severity":1,"message":"119","line":3,"column":13,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"120","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":22},{"ruleId":"111","severity":1,"message":"121","line":5,"column":24,"nodeType":"113","messageId":"114","endLine":5,"endColumn":31},{"ruleId":"111","severity":1,"message":"115","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":32,"column":86,"nodeType":"118","endLine":32,"endColumn":138},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'PatternNew' is defined but never used.","Identifier","unusedVar","'patternMethods' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Tone' is defined but never used.","'masterVolume' is defined but never used.","'samples' is defined but never used.","no-global-assign","no-unsafe-negation"]